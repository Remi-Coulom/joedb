# Threads
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
set(THREADS_PREFER_PTHREAD_FLAG TRUE)
find_package(Threads REQUIRED)

# Networking
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
set(ASIO_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../submodules/asio/asio/include)
if (TRUE)
 if (EXISTS "${ASIO_DIRECTORY}/asio/ts/net.hpp")
  message("-- Found asio in submodules")
  include_directories(${ASIO_DIRECTORY})
  add_definitions(-DJOEDB_HAS_ASIO_NET)
  set(HAS_NETWORKING TRUE)
  message("== networking OK")
 else()
  message("== no networking. Try git submodule update --init --recursive")
 endif()
endif()

# libssh
# not compatible with asio in cygwin (because asio insists on using winsock)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if(NOT ${CMAKE_SYSTEM_NAME} EQUAL CYGWIN)
 if(NOT ${CMAKE_SYSTEM_NAME} EQUAL Darwin)
  find_package(libssh QUIET)
 endif()

 if(NOT libssh_FOUND)
  if(NOT CMAKE_CROSSCOMPILING)
   message("-- find_package did not find libssh, trying check_include_file_cxx ${CMAKE_SYSTEM_NAME}")
   unset(libssh_FOUND)
   include(CheckIncludeFileCXX)
   check_include_file_cxx("libssh/libssh.h" libssh_FOUND)
  endif()
 endif()

 if (libssh_FOUND)
  if (NOT LIBSSH_LIBRARIES)
   set(LIBSSH_LIBRARIES ssh)
  endif()
  add_definitions(-DJOEDB_HAS_SSH)
  message("== ssh was found (${LIBSSH_LIBRARIES})")
 else()
  message("== ssh not found")
  if(CMAKE_CROSSCOMPILING)
   message("   cross-compiling")
  elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
   message("   suggestion: sudo apt install libssh-dev")
  elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
   message("   suggestion: sudo port install libssh")
  elseif(WIN32)
   message("   suggestion: vcpkg install libssh:x64-windows")
  endif()
 endif()
endif()
