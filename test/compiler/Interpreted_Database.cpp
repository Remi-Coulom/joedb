#include "../../doc/source/tutorial/src/settings/Readonly_Interpreted_File_Database.h"

#include "gtest/gtest.h"

/////////////////////////////////////////////////////////////////////////////
TEST(Compiler, Interpreted_Database)
/////////////////////////////////////////////////////////////////////////////
{
 settings::Readonly_Interpreted_File_Database db
 (
  "../doc/source/tutorial/custom_settings.joedbi"
 );

 EXPECT_FALSE(db.get_dark_mode());
 EXPECT_EQ(db.get_user(), "joe");
 EXPECT_EQ(db.get_host(), "www.joedb.org");
}

/////////////////////////////////////////////////////////////////////////////
TEST(Compiler, Interpreted_File_Error)
/////////////////////////////////////////////////////////////////////////////
{
 EXPECT_ANY_THROW
 (
  joedb::File("this_file_does_not_exist.joedbi", joedb::Open_Mode::read_existing)
 );
}

/////////////////////////////////////////////////////////////////////////////
TEST(Compiler, Interpreted_Stream_Parent_Error)
/////////////////////////////////////////////////////////////////////////////
{
 EXPECT_ANY_THROW
 (
  joedb::detail::fstream_Parent("this_file_does_not_exist.joedbi", joedb::Open_Mode::read_existing)
 );
}

/////////////////////////////////////////////////////////////////////////////
TEST(Compiler, Interpreted_Stream_Error_Alternative)
/////////////////////////////////////////////////////////////////////////////
{
 try
 {
  joedb::File file
  (
   "this_file_does_not_exist.joedbi",
   joedb::Open_Mode::read_existing
  );
  joedb::streambuf buf(file);
  std::istream is(&buf);
  FAIL() << "Expected exception";
 }
 catch (...)
 {
 }
}

/////////////////////////////////////////////////////////////////////////////
TEST(Compiler, Interpreted_Stream_Error)
/////////////////////////////////////////////////////////////////////////////
{
 EXPECT_ANY_THROW
 (
  joedb::ifstream("this_file_does_not_exist.joedbi")
 );
}

/////////////////////////////////////////////////////////////////////////////
TEST(Compiler, Interpreted_Database_Error)
/////////////////////////////////////////////////////////////////////////////
{
 EXPECT_ANY_THROW
 (
  joedb::Readonly_Interpreted_File("this_file_does_not_exist.joedbi")
 );
}
