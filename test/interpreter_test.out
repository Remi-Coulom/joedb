OK: ###############################################################################
OK: # Testing basic interpreter commands
OK: ###############################################################################
42
OK: blob "This is my life"
OK: create_table city
OK: create_table person
OK: add_field city name string
OK: add_field person name string
OK: add_field person city references city
OK: add_field person bio blob
OK: insert_into city 1 "Paris"
OK: insert_into city 2 "Lille"
OK: insert_into city 15 "Pétaouchnok"
OK: insert_into person 1 "Rémi" 2 42
OK: insert_into person 2 "Norbert" 2 42
OK: insert_into person 3 "Alexandre" 15 42
create_table city
create_table person
add_field city name string
add_field person name string
add_field person city references city
add_field person bio blob
insert_vector city 1 2
insert_vector city 15 1
update city 1 name "Paris"
update city 2 name "Lille"
update city 15 name "Pétaouchnok"
insert_vector person 1 3
update person 1 name "Rémi"
update person 2 name "Norbert"
update person 3 name "Alexandre"
update person 1 city 2
update person 2 city 2
update person 3 city 15
update person 1 bio 42
update person 2 bio 42
update person 3 bio 42
OK: dump
CREATE TABLE "city"("__id" INTEGER PRIMARY KEY);
CREATE TABLE "person"("__id" INTEGER PRIMARY KEY);
ALTER TABLE "city" ADD "name" TEXT;
ALTER TABLE "person" ADD "name" TEXT;
ALTER TABLE "person" ADD "city" INTEGER REFERENCES "city";
ALTER TABLE "person" ADD "bio" BLOB;
INSERT INTO "city"("__id") VALUES(1);
INSERT INTO "city"("__id") VALUES(2);
INSERT INTO "city"("__id") VALUES(15);
UPDATE "city" SET "name" = X'5061726973' WHERE "__id" = 1;
UPDATE "city" SET "name" = X'4c696c6c65' WHERE "__id" = 2;
UPDATE "city" SET "name" = X'50c3a974616f7563686e6f6b' WHERE "__id" = 15;
INSERT INTO "person"("__id") VALUES(1);
INSERT INTO "person"("__id") VALUES(2);
INSERT INTO "person"("__id") VALUES(3);
UPDATE "person" SET "name" = X'52c3a96d69' WHERE "__id" = 1;
UPDATE "person" SET "name" = X'4e6f7262657274' WHERE "__id" = 2;
UPDATE "person" SET "name" = X'416c6578616e647265' WHERE "__id" = 3;
UPDATE "person" SET "city" = 2 WHERE "__id" = 1;
UPDATE "person" SET "city" = 2 WHERE "__id" = 2;
UPDATE "person" SET "city" = 15 WHERE "__id" = 3;
-- UPDATE "person" SET "bio" = "BLOB" WHERE "__id" = 1;
-- UPDATE "person" SET "bio" = "BLOB" WHERE "__id" = 2;
-- UPDATE "person" SET "bio" = "BLOB" WHERE "__id" = 3;
OK: sql
{
 "city":
 {
  "__size": 3,
  "name": ["UGFyaXM=", "TGlsbGU=", "UMOpdGFvdWNobm9r"]
 },
 "person":
 {
  "__size": 3,
  "name": ["UsOpbWk=", "Tm9yYmVydA==", "QWxleGFuZHJl"],
  "city": [1, 1, 2],
  "bio": [42, 42, 42]
 }
}
OK: json 1
------------------------------------
  name        city bio              
------------------------------------
1 "Rémi"         2 "This is my life"
2 "Norbert"      2 "This is my life"
3 "Alexandre"   15 "This is my life"
OK: table person
name: "Rémi"
city: 2
 bio: "This is my life"
OK: record person 1

General commands
~~~~~~~~~~~~~~~~
 about
 help
 quit
 abort
 echo on|off
 prompt on|off

Journal
~~~~~~~
 timestamp [<stamp>] (if no value is given, use current time)
 comment "<comment_string>"
 valid_data
 flush
 checkpoint
 blob <data_string>

Data definition
~~~~~~~~~~~~~~~
 create_table <table_name>
 drop_table <table_name>
 rename_table <old_table_name> <new_table_name>
 add_field <table_name> <field_name> <type> [default <value>]
 drop_field <table_name> <field_name>
 rename_field <table_name> <old_field_name> <new_field_name>
 custom <custom_name>

 <type> may be:
  string,
  blob,
  int8, int16, int32, int64,
  float32, float64,
  boolean,
  references <table_name>

Data manipulation
~~~~~~~~~~~~~~~~~
 insert_into <table_name> <record_id>
 insert_vector <table_name> <record_id> <size>
 update <table_name> <record_id> <field_name> <value>
 update_vector <table_name> <record_id> <field_name> <N> <v_1> ... <v_N>
 delete_from <table_name> <record_id>

Displaying data
~~~~~~~~~~~~~~~
 table <table_name> [<max_column_width>] [start] [length]
 record <table_name> [<record_id>]
 table_size <table_name>
 schema
 dump
 sql
 json [<base64>]
 dump_blob <blob> [<dump_file_name>]

OK: help
Exception caught: create_table: name already used: city
Line 23: create_table city
Exception caught: create_table: invalid identifier: 123456
Line 24: create_table 123456
Exception caught: rename_table: name already used: city
Line 25: rename_table person city
Exception caught: rename_field: name already used: name
Line 26: rename_field person city name
OK: 
OK: drop_table city
OK: drop_table person
OK: dump
OK: 
OK: create_table test
OK: add_field test a int32
Exception caught: add_field: name already used
Line 34: add_field test a int32
OK: add_field test b int64
Exception caught: unknown type
Line 36: add_field test c qsdfqsdf
Exception caught: No such table: qsdfqsdf
Line 37: drop_table qsdfqsdf
Exception caught: Unknown command. For a list of available commands, try "help".
Line 38: qsdfqsdf
OK: insert_into test 1 1234 5678
Exception caught: insert: record_id already in use
Line 40: insert_into test 1 1234 5678
OK: add_field test d string
OK: add_field test e boolean
create_table test
add_field test a int32
add_field test b int64
add_field test d string
add_field test e boolean
insert_vector test 1 1
update test 1 a 1234
update test 1 b 5678
update test 1 d ""
update test 1 e false
OK: dump
OK: 
Exception caught: drop_field: invalid field_id
Line 45: drop_field test qsdfqsdf
OK: drop_field test a
OK: insert_into test 2 3 "4" false
OK: delete_from test 2
Exception caught: delete_record: bad record_id
Line 49: delete_from test 123
Exception caught: bad field
Line 50: update test 1 a 56789
Exception caught: update: invalid record_id
Line 51: update test 2 b 56789
OK: update test 1 b 56789
create_table test
add_field test b int64
add_field test d string
add_field test e boolean
insert_vector test 1 1
update test 1 b 56789
update test 1 d ""
update test 1 e false
OK: dump
OK: 
OK: create_table ref
OK: add_field ref ref references test
OK: drop_table test
create_table ref
add_field ref ref references __unknown_table__
OK: dump
OK: drop_table ref
OK: 
OK: create_table alltypes
OK: add_field alltypes s string
OK: add_field alltypes i32 int32
OK: add_field alltypes i64 int64
OK: add_field alltypes ref references alltypes
OK: add_field alltypes b boolean
OK: add_field alltypes f float32
OK: add_field alltypes d float64
OK: add_field alltypes o int8
OK: add_field alltypes oulala int16
OK: insert_into alltypes 1 "toto" 123456789 123456789123456789 1 1 3.14 3.14159265359 42 12345
OK: 
OK: timestamp 1234567890
OK: comment "This is a comment. これは日本語です。"
OK: valid_data
OK: 
OK: custom toto_le_petit_rigolo
OK: rename_table alltypes all_types
OK: rename_field all_types s str
OK: 
OK: create_table float
OK: add_field float value float32
OK: insert_vector float 1 5
OK: update_vector float 1 value 5 0.1 0.2 0.3 0.4 0.5
Exception caught: bad field
Line 85: update_vector float 1 qsdf 5 0.1 0.2 0.3 0.4 0.5
OK: 
OK: create_table toto
OK: add_field toto value string
OK: insert_vector toto 3 1
OK: insert_vector toto 5 1
OK: update toto 3 value "toto"
Exception caught: update_vector: invalid record_id range
Line 92: update_vector toto 5 value 2 "kiki" "kuku"
OK: 
Exception caught: rename_table: invalid identifier: __toto__
Line 94: rename_table toto __toto__
Exception caught: No such table: azersdf
Line 95: rename_table azersdf toto
Exception caught: add_field: invalid identifier: __field__
Line 96: add_field toto __field__ string
Exception caught: No such table: azersdf
Line 97: add_field azersdf field string
Exception caught: No such table: azersdf
Line 98: drop_field azersdf field
Exception caught: rename_field: invalid identifier: __value__
Line 99: rename_field toto value __value__
Exception caught: No such table: azersdf
Line 100: rename_field azersdf value valux
Exception caught: rename_field: invalid field_id
Line 101: rename_field toto valux valux
Exception caught: No such table: azersdf
Line 102: insert_into azersdf 1
Exception caught: No such table: azersdf
Line 103: insert_vector azersdf 1 1
Exception caught: No such table: azersdf
Line 104: delete_from azersdf 1
OK: 
create_table all_types
create_table float
create_table toto
add_field all_types str string
add_field all_types i32 int32
add_field all_types i64 int64
add_field all_types ref references all_types
add_field all_types b boolean
add_field all_types f float32
add_field all_types d float64
add_field all_types o int8
add_field all_types oulala int16
add_field float value float32
add_field toto value string
insert_vector all_types 1 1
update all_types 1 str "toto"
update all_types 1 i32 123456789
update all_types 1 i64 123456789123456789
update all_types 1 ref 1
update all_types 1 b true
update all_types 1 f 3.14
update all_types 1 d 3.14159
update all_types 1 o 42
update all_types 1 oulala 12345
insert_vector float 1 5
update float 1 value 0.1
update float 2 value 0.2
update float 3 value 0.3
update float 4 value 0.4
update float 5 value 0.5
insert_vector toto 3 1
insert_vector toto 5 1
update toto 3 value "toto"
update toto 5 value ""
OK: dump
OK: 
OK: quit
