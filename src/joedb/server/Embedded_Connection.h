#ifndef joedb_Embedded_Connection_declared
#define joedb_Embedded_Connection_declared

#include "joedb/server/Connection.h"

#include <mutex>

namespace joedb
{
 ////////////////////////////////////////////////////////////////////////////
 class Embedded_Connection: public Decomposed_Connection
 ////////////////////////////////////////////////////////////////////////////
 {
  private:
   std::mutex mutex;
   Journal_File server_journal;

   //////////////////////////////////////////////////////////////////////////
   void lock() override
   //////////////////////////////////////////////////////////////////////////
   {
    mutex.lock();
   }

   //////////////////////////////////////////////////////////////////////////
   void unlock() override
   //////////////////////////////////////////////////////////////////////////
   {
    mutex.unlock();
   }

   //////////////////////////////////////////////////////////////////////////
   void pull(Journal_File &client_journal) override
   //////////////////////////////////////////////////////////////////////////
   {
    const int64_t client_position = client_journal.get_checkpoint_position();
    const int64_t server_position = server_journal.get_checkpoint_position();

    if (client_position < server_position)
     client_journal.append_raw_tail
     (
      server_journal.get_raw_tail(client_position)
     );
   }

   //////////////////////////////////////////////////////////////////////////
   void push(Readonly_Journal &client_journal) override
   //////////////////////////////////////////////////////////////////////////
   {
    const int64_t client_position = client_journal.get_checkpoint_position();
    const int64_t server_position = server_journal.get_checkpoint_position();

    if (server_position < client_position)
     server_journal.append_raw_tail
     (
      client_journal.get_raw_tail(server_position)
     );
   }

  public:
   //////////////////////////////////////////////////////////////////////////
   Embedded_Connection(Generic_File &file):
   //////////////////////////////////////////////////////////////////////////
    server_journal(file)
   {
   }
 };
}

#endif
