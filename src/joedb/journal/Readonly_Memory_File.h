#ifndef joedb_Readonly_Memory_File_declared
#define joedb_Readonly_Memory_File_declared

#include "joedb/journal/Generic_File.h"

#include <algorithm>

namespace joedb
{
 ////////////////////////////////////////////////////////////////////////////
 class Readonly_Memory_File: public Generic_File
 ////////////////////////////////////////////////////////////////////////////
 {
  private:
   const char * const data;
   const size_t size;

   size_t current;

   //////////////////////////////////////////////////////////////////////////
   int64_t get_size() const override
   //////////////////////////////////////////////////////////////////////////
   {
    return int64_t(size);
   }

   //////////////////////////////////////////////////////////////////////////
   size_t read_buffer() override
   //////////////////////////////////////////////////////////////////////////
   {
    size_t n = buffer_size;
    const size_t max = size - current;
    if (n > max)
     n = max;
    std::copy_n(&data[current], n, buffer);
    current += n;
    return n;
   }

   //////////////////////////////////////////////////////////////////////////
   void write_buffer() override
   //////////////////////////////////////////////////////////////////////////
   {
   }

   //////////////////////////////////////////////////////////////////////////
   int seek(int64_t offset) override
   //////////////////////////////////////////////////////////////////////////
   {
    if (offset >= 0 && offset <= get_size())
    {
     current = size_t(offset);
     return 0;
    }
    else
     return 1;
   }

   //////////////////////////////////////////////////////////////////////////
   void sync() override
   //////////////////////////////////////////////////////////////////////////
   {
   }

  public:
   //////////////////////////////////////////////////////////////////////////
   Readonly_Memory_File(const void *memory, size_t size):
   //////////////////////////////////////////////////////////////////////////
    data((char *)memory),
    size(size),
    current(0)
   {
    this->mode = joedb::Open_Mode::read_existing;
   }
 };
}

#endif
