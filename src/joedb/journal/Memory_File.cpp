#include "joedb/journal/Memory_File.h"

namespace joedb
{
 ////////////////////////////////////////////////////////////////////////////
 size_t Memory_File::pread(char *buffer, size_t size, int64_t offset) const
 ////////////////////////////////////////////////////////////////////////////
 {
  if (size_t(offset) >= data.size())
   return 0;
  const size_t max_size = data.size() - size_t(offset);
  const size_t n = std::min(size, max_size);
  std::memcpy(buffer, &data[size_t(offset)], n);
  return n;
 }

 ////////////////////////////////////////////////////////////////////////////
 void Memory_File::pwrite(const char *buffer, size_t size, int64_t offset)
 ////////////////////////////////////////////////////////////////////////////
 {
  const size_t end = size_t(offset) + size;
  if (end > data.size())
   data.resize(end);
  std::memcpy(&data[size_t(offset)], buffer, size);
 }

 ////////////////////////////////////////////////////////////////////////////
 Memory_File::~Memory_File()
 ////////////////////////////////////////////////////////////////////////////
 {
  destructor_flush();
 }
}
