#include "joedb/compiler/generator/Generator.h"
#include "joedb/get_version.h"
#include "joedb/io/get_time_string.h"

#include <iostream>
#include <filesystem>

namespace joedb::generator
{
 ////////////////////////////////////////////////////////////////////////////
 void Generator::write_initial_comment()
 ////////////////////////////////////////////////////////////////////////////
 {
  out << "/////////////////////////////////////////////////////////////////////////////\n";
  out << "//\n";
  out << "// This code was automatically generated by the joedb compiler\n";
  out << "// https://www.remi-coulom.fr/joedb/\n";
  out << "//\n";
  out << "// Path to compiler: " << options.exe_path << '\n';
  out << "// Version: " << joedb::get_version() << '\n';
  out << "// joedbc compilation time: " << __DATE__ << ' ' << __TIME__ << '\n';
  out << "// Generation of this file: " << get_time_string_of_now() << '\n';
  out << "//\n";
  out << "/////////////////////////////////////////////////////////////////////////////\n";
 }

 ////////////////////////////////////////////////////////////////////////////
 Generator::Generator
 ////////////////////////////////////////////////////////////////////////////
 (
  const char *dir_name,
  const char *file_name,
  const Compiler_Options &options
 ):
  options(options)
 {
  std::filesystem::create_directory(options.get_name_space().back());
  std::string dir_string = options.get_name_space().back() + "/" + std::string(dir_name);
  std::filesystem::create_directory(dir_string);
  std::string file_string = dir_string + "/" + std::string(file_name);

  out.exceptions(std::ios::badbit | std::ios::failbit);
  out.open(file_string, std::ios::trunc);
  write_initial_comment();
 }

 ////////////////////////////////////////////////////////////////////////////
 void Generator::generate()
 ////////////////////////////////////////////////////////////////////////////
 {
 }

 ////////////////////////////////////////////////////////////////////////////
 Generator::~Generator() = default;
 ////////////////////////////////////////////////////////////////////////////
}
