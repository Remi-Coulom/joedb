#include "Stream_File.h"
#include "Exception.h"

/////////////////////////////////////////////////////////////////////////////
joedb::Stream_File::Stream_File(std::iostream &stream, Open_Mode mode):
/////////////////////////////////////////////////////////////////////////////
 stream(stream)
{
 this->mode = mode;

 if (!stream.good())
  throw Exception("Bad stream");
}

/////////////////////////////////////////////////////////////////////////////
int64_t joedb::Stream_File::get_size() const
/////////////////////////////////////////////////////////////////////////////
{
 const std::streampos pos = stream.tellg();
 stream.seekg(0, std::ios_base::end);
 const std::streampos result = stream.tellg();
 stream.seekg(pos);
 return int64_t(result);
}

/////////////////////////////////////////////////////////////////////////////
size_t joedb::Stream_File::read_buffer()
/////////////////////////////////////////////////////////////////////////////
{
 return size_t(stream.readsome(buffer, int64_t(buffer_size)));
}

/////////////////////////////////////////////////////////////////////////////
void joedb::Stream_File::write_buffer()
/////////////////////////////////////////////////////////////////////////////
{
 stream.write(buffer, int64_t(write_buffer_index));
}

/////////////////////////////////////////////////////////////////////////////
int joedb::Stream_File::seek(size_t offset)
/////////////////////////////////////////////////////////////////////////////
{
 stream.seekg(int64_t(offset));
 stream.seekp(int64_t(offset));

 int result = 0;
 if (!stream.good())
 {
  stream.clear();
  result = 1;
 }

 return result;
}
